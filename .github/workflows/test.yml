name: 'build-test'
on: # rebuild any PRs and main branch changes
  pull_request:
    paths-ignore:
      - README.md
      - 'docs/**'
  push:
    branches:
      - main
      - 'releases/*'
    paths-ignore:
      - README.md
      - 'docs/**'
jobs:
  build: # run build using the github action!
    runs-on: ubuntu-latest
    steps:

      - name: Determine checkout-path
        run: |
          if [[ $GITHUB_ACTOR == "nektos/act" ]]; then checkout_path="devcontainer-build-run"; else checkout_path="."; fi
          echo "::set-output name=checkout-path::$checkout_path"
        id: checkout-path

      # Perform checkout to specific path when we're running in nektos/act - see https://github.com/nektos/act/commit/f29b1f2523f5162fa42554870269160a4fb51419
      - name: Checkout (nektos/act)
        uses: actions/checkout@v2
        if: ${{ github.actor == 'nektos/act' }}
        with:
           path: devcontainer-build-run
      - name: Checkout (GitHub)
        uses: actions/checkout@v2
        if: ${{ github.actor != 'nektos/act' }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        if: github.ref == 'refs/heads/main' # only need this for push (on `main`)
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build in dev container
        uses: ./
        id: build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AZDO_TOKEN: ${{ secrets.AZDO_TOKEN }}
          AZURE_DEVOPS_EXT_PAT: ${{ secrets.AZDO_TOKEN }}
          AZDO_SERVICE_URL: ${{ secrets.AZDO_SERVICE_URL }}
          BUILD_NUMBER: ${{ github.run_id }}
          IS_PR: ${{ github.head_ref }}
          BRANCH: ${{ github.ref }}
        with:
          checkoutPath: ${{ steps.checkout-path.outputs.checkout-path }}
          imageName: ghcr.io/stuartleeks/devcontainer-build-run-devcontainer
          runCmd: |
            echo "Starting"
            ./scripts/ci.sh
          env: |
            BUILD_NUMBER
            IS_CI=1
            IS_PR
            BRANCH
            AZDO_TOKEN
            AZURE_DEVOPS_EXT_PAT
            AZDO_ORG=https://dev.azure.com/devcontainer-build-run
            AZDO_PROJECT=devcontainer-build-run-test
            AZDO_BUILD=devcontainer-build-run-test

      - uses: actions/upload-artifact@v2
        with:
          name: azdo-task
          path: ./azdo-task/stuartleeks.devcontainer-build-run-${{ steps.build.outputs.version }}.vsix



      - name: Create Release
        id: create_release
        if: github.ref == 'refs/heads/main' # only create release on `main`
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.build.outputs.version }}
          release_name: Release v${{ steps.build.outputs.version }}
          draft: false
          prerelease: true


      - name: Create Major/Minor tag
        id: create_tag_short_verison
        if: github.ref == 'refs/heads/main' # only create release on `main`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VERSION_SHORT: v${{ steps.build.outputs.version_short }}
        run: |
          echo "VERSION_SHORT: $VERSION_SHORT"
          sudo chown -R $(whoami) .
          git config user.name "CI build"
          git config user.email stuart@leeks.net
          git tag -fa $VERSION_SHORT -m $VERSION_SHORT
          git push -f origin $VERSION_SHORT


      - name: Upload Release Asset
        id: upload-release-asset 
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./azdo-task/stuartleeks.devcontainer-build-run-${{ steps.build.outputs.version }}.vsix
          asset_name: stuartleeks.devcontainer-build-run-${{ steps.build.outputs.version }}.vsix
          asset_content_type: application/zip
          
      # - name: fail
      #   run: |
      #     echo "::error file=app.js,line=10,col=15::Something went wrong"
      #     exit 1
