{
  "$schema": "https://raw.githubusercontent.com/microsoft/azure-pipelines-task-lib/master/tasks.schema.json",
  "id": "d784888b-f54b-4926-a8d1-3a159d2de8e0",
  "name": "DevcontainersCi",
  "friendlyName": "Devcontainers CI Task",
  "description": "Build and run Dev Containers (https://containers.dev) in Azure DevOps Pipelines",
  "author": "Devcontainers",
  "helpMarkDown": "",
  "category": "Build",
  "version": {
    "Major": 0,
    "Minor": 3,
    "Patch": 0
  },
  "visibility": [
    "Build",
    "Release"
  ],
  "demands": [
    "npm"
  ],
  "minimumAgentVersion": "1.83.0",
  "instanceNameFormat": "Build and Run Dev Container: $(rootFolder)",
  "inputs": [
    {
      "name": "imageName",
      "type": "string",
      "label": "Image name (including registry)",
      "required": false
    },
    {
      "name": "imageTag",
      "type": "string",
      "label": "One or more comma-separated image tags (defaults to latest)",
      "required": false
    },
    {
      "name": "platform",
      "type": "string",
      "label": "Platforms for which the image should be built. If omitted, defaults to the platform of the Azure DevOps Agent. Multiple platforms should be comma separated.",
      "required": false
    },
    {
      "name": "runCmd",
      "type": "multiLine",
      "label": "Specify the command to run after building the dev container image",
      "required": false
    },
    {
      "name": "subFolder",
      "type": "string",
      "label": "Specify a child folder (containing a .devcontainer) instead of using the repository root",
      "required": false
    },
    {
      "name": "env",
      "type": "multiLine",
      "label": "Specify environment variables to pass to the docker run command",
      "required": false
    },
    {
      "name": "push",
      "type": "pickList",
      "options": {
        "never": "Never push",
        "filter": "Push if buildReasonsForPush, sourceBranchFilterForPush, and pushOnFailedBuild conditions are met",
        "always": "Always push"
      },
      "required": false,
      "label": "Control when images are pushed to the registry"
    },
    {
      "name": "pushOnFailedBuild",
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "label": "Control whether to push the image on failed builds (if push==filter)"
    },
    {
      "name": "buildReasonsForPush",
      "type": "multiLine",
      "label": "Set the Build Reasons that should trigger a push of the dev container image (if push=filter). Defaults to Manual, IndividualCI, BatchedCI. (see https://docs.microsoft.com/en-us/azure/devops/pipelines/build/variables?view=azure-devops&viewFallbackFrom=vsts&tabs=yaml)",
      "required": false,
      "defaultValue": "Manual\nIndividualCI\nBatchedCI"
    },
    {
      "name": "sourceBranchFilterForPush",
      "type": "multiLine",
      "label": "Set the source branches (e.g. refs/heads/main) that are allowed to trigger a push of the dev container image (if push=filter). Leave empty to allow all.",
      "required": false,
      "defaultValue": ""
    },
    {
      "name": "skipContainerUserIdUpdate",
      "type": "boolean",
      "label": "For non-root Dev Containers (i.e. where `remoteUser` is specified), the action attempts to make the container user UID and GID match those of the host user. Set this to true to skip this step (defaults to false)",
      "required": false,
      "defaultValue": false

    },
    {
      "name": "cacheFrom",
      "type": "multiLine",
      "label": "Specify additional images to use for build caching",
      "required": false
    },
    {
      "name": "noCache",
      "type": "boolean",
      "label": "Builds the image with `--no-cache` (takes precedence over `cacheFrom`)",
      "required": false
    }
  ],
  "outputVariables": [{
    "name": "runCmdOutput",
    "description": "The output of the command specified in the runCmd input"
  }],
  "execution": {
    "Node10": {
      "target": "run-main.js",
      "argumentFormat": ""
    }
  },
  "postjobexecution": {
    "Node10": {
      "target": "run-post.js",
      "argumentFormat": ""
    }
  }
}